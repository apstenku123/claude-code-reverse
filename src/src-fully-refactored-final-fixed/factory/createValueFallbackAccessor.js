/**
 * Factory function that creates an accessor for retrieving values from a source object.
 * If a value for the given key is not found, isBlobOrFileLikeObject attempts to retrieve the value using a fallback key
 * generated by the VF2 function.
 *
 * @param {Object} sourceObject - The object to retrieve values from.
 * @returns {{ get: function(string): any }} An accessor object with a 'get' method.
 */
function createValueFallbackAccessor(sourceObject) {
  /**
   * Retrieves a value from the source object using the provided key.
   * If the value is not found, attempts to retrieve isBlobOrFileLikeObject using a fallback key generated by VF2.
   *
   * @param {string} key - The key to look up in the source object.
   * @returns {*} The value associated with the key or its fallback, or undefined if not found.
   */
  function getValue(key) {
    const source = sourceObject || {};
    // Try to get the value directly
    let value = source[key];
    // If value is null or undefined, try the fallback key
    if (value === null || value === undefined) {
      value = source[VF2(key)];
    }
    return value;
  }

  return {
    get: getValue
  };
}

module.exports = createValueFallbackAccessor;