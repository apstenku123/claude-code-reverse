/**
 * Combines properties from a source observable and a configuration object, then adds a custom 'get' property.
 * The 'get' property is generated by invoking the createTypedConfigGetter function with the observable'createInteractionAccessor name, a subscription, and an identifier.
 *
 * @param {Object} sourceObservable - The base observable object containing at least a 'name' property.
 * @param {Object} config - Additional configuration properties to merge into the result.
 * @param {any} subscription - Subscription or context information passed to the getter generator.
 * @param {any} identifier - Additional identifier or context for the getter generator.
 * @returns {Object} - a new object combining all properties and a custom 'get' property.
 */
function createObservableWithGetter(sourceObservable, config, subscription, identifier) {
  // Merge sourceObservable and config into a new object
  const mergedObject = {
    ...sourceObservable,
    ...config,
    // Add a 'get' property generated by createTypedConfigGetter
    get: createTypedConfigGetter(sourceObservable.name, subscription, identifier)
  };
  return mergedObject;
}

module.exports = createObservableWithGetter;
