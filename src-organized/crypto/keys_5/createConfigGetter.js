/**
 * Factory function that creates a configuration getter object.
 *
 * Given a configuration object, returns an object with a `get` method that retrieves
 * a value by key. If the key is not found, isBlobOrFileLikeObject attempts to retrieve the value using
 * a fallback key generated by the `VF2` function.
 *
 * @param {Object} configObject - The configuration object to retrieve values from.
 * @returns {{ get: function(string): any }} An object with a `get` method for retrieving configuration values.
 */
function createConfigGetter(configObject) {
  /**
   * Retrieves a value from the configuration object by key.
   * If the key is not found, tries a fallback key using VF2.
   *
   * @param {string} key - The key to look up in the configuration object.
   * @returns {*} The value associated with the key, or the fallback key, or undefined if not found.
   */
  function getConfigValue(key) {
    const config = configObject || {};
    // Try to get the value by the provided key
    let value = config[key];
    // If not found, try to get the value by the fallback key
    return value !== null && value !== undefined ? value : config[VF2(key)];
  }

  return {
    get: getConfigValue
  };
}

module.exports = createConfigGetter;